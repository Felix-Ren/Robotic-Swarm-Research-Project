% Calculate the position of the robot when it first hits a boundary
% param prevX, prevY are the initial position of robot
% param X, Y are the new position generated by step function
function [nextX, nextY] = boundRobot(prevX, prevY, X, Y, boundary)
    if X >= boundary(1) && X <= boundary(2) ...
            && Y >= boundary(3) && Y <= boundary(4)
        nextX = X;
        nextY = Y;
        return
    else
        m = (Y - prevY) / (X - prevX);
        if X < boundary(1)
            backX = X - boundary(1);
            X = boundary(1);
            Y = Y - m*backX;
        elseif X > boundary(2)
            backX = X - boundary(2);
            X = boundary(2);
            Y = Y - m*backX;
        end

        m = (Y - prevY) / (X - prevX);
        if Y < boundary(3)
            backY = Y - boundary(3);
            Y = boundary(3);
            X = X - 1/m*backY;
        elseif Y > boundary(4)
            backY = Y - boundary(4);
            Y = boundary(4);
            X = X - 1/m*backY;
        end
        [nextX, nextY] = boundRobot(prevX, prevY, X, Y, boundary);
        % run this as recursion in case the new position is outside x and y boundaries simultaneously
    end
end